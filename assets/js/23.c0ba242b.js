(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{424:function(t,a,s){"use strict";s.r(a);var e=s(1),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("This post documents how I set up my personal configuration of VIM for portable use.")])]),t._v(" "),s("h2",{attrs:{id:"background"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[t._v("#")]),t._v(" Background")]),t._v(" "),s("p",[t._v("Recently I fell in love with VIM. I use VIM for programming, blogging, documentation and almost everything on my personal computer. However when I switched to my company computer, I was so frustrated that I have to stuck with the MS Office Suite. So I decided to spend the weekend to put together a light weight, environment independent, but yet powerful VIM configuration to use on any computer.")]),t._v(" "),s("p",[t._v("The configuration should be able to:")]),t._v(" "),s("ul",[s("li",[t._v("Work on Windows system.")]),t._v(" "),s("li",[t._v("Not rely on any development tools/environment such git, npm, cmake, etc. (as my company computer won't be able to install all these tools without going through approval process).")]),t._v(" "),s("li",[t._v("Easily shared by USB drive or a remote repository.")]),t._v(" "),s("li",[t._v("Have minimal plugins pre-installed.")]),t._v(" "),s("li",[t._v("Have common key mappings and useful presets.")]),t._v(" "),s("li",[t._v("Have minimal / no additional setups on a new machine.")])]),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("p",[t._v("I use the portable GVim downloaded from "),s("a",{attrs:{href:"https://portableapps.com/apps/development/gvim_portable",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". The installation file is a binary and can be installed to any location very easily. And it seems the firewall of the company will let it go through without any issues.")]),t._v(" "),s("h2",{attrs:{id:"folder-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#folder-structure"}},[t._v("#")]),t._v(" Folder Structure")]),t._v(" "),s("p",[t._v("I installed to my non-system D driver. The folder structure is as follows:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("|-- VIM\n    |-- App\n    |-- Settings\n\n")])])]),s("h2",{attrs:{id:"plugins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[t._v("#")]),t._v(" Plugins")]),t._v(" "),s("p",[t._v("I use a dozen of plugins. They can be categorized into the following:")]),t._v(" "),s("ol",[s("li",[t._v("Theming and cosmetic:")])]),t._v(" "),s("ul",[s("li",[t._v("vim-github-colorscheme")]),t._v(" "),s("li",[t._v("onedark.vim")]),t._v(" "),s("li",[t._v("vim-airline")]),t._v(" "),s("li",[t._v("vim-airline-themes")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Easier navigation")])]),t._v(" "),s("ul",[s("li",[t._v("SimpylFold")]),t._v(" "),s("li",[t._v("nerdtree")]),t._v(" "),s("li",[t._v("vim-sneak")]),t._v(" "),s("li",[t._v("vim-surround")]),t._v(" "),s("li",[t._v("auto-pairs")]),t._v(" "),s("li",[t._v("tabular")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("For documentation")])]),t._v(" "),s("ul",[s("li",[t._v("vimwiki")]),t._v(" "),s("li",[t._v("vim-markdown")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("For programming")])]),t._v(" "),s("ul",[s("li",[t._v("indentpython.vim")])]),t._v(" "),s("p",[t._v("It is a bit annoying that I couldn't get the completion plugins to work such as YouCompleteMe or python-mode. Those plugins require a more open system where you can install the environment needed.")]),t._v(" "),s("h2",{attrs:{id:"other-customizations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-customizations"}},[t._v("#")]),t._v(" Other customizations")]),t._v(" "),s("p",[t._v("Except for the customized key mappings that I like to use, I also have the following customizations.")]),t._v(" "),s("div",{staticClass:"language-vim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vim"}},[s("code",[t._v("cnoremap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("esubstitute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^\\s*\\('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substitute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("&"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("commentstring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%s.*$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\)*\\s*:*'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("When you are in the command mode, you can press alt-v to paste the current line in the command.")]),t._v(" "),s("div",{staticClass:"language-vim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vim"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("autocmd")]),t._v(" FileType "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("python")]),t._v(" nnoremap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("buffer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("python")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("I like to use F5. This command will directly run your python file in the terminal with one key stroke.")]),t._v(" "),s("div",{staticClass:"language-vim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vim"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("autocmd")]),t._v(" bufenter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("md "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("noremap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("silent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("f5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" start msedge "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%:p"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cr")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Again, use F5 to display the current markdown file in the browser, where I have an extension installed to render the markdown.")]),t._v(" "),s("div",{staticClass:"language-vim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vim"}},[s("code",[t._v("augroup clear_trailing\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("autocmd")]),t._v(" BufWritePre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" &"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ft")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vimwiki"')]),t._v(" | "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\s\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("autocmd")]),t._v(" BufWritePre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" &"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ft")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vimwiki"')]),t._v(" | "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("n")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("autocmd")]),t._v(" BufwritePre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("noh")]),t._v("\naugroup END\n")])])]),s("p",[t._v("This autocmd will remove all trailing spaces and blank lines. How ever I disabled it in the markdown files because sometimes I have to type extra spaces as a cartridge.")]),t._v(" "),s("h2",{attrs:{id:"update-aug-21"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-aug-21"}},[t._v("#")]),t._v(" Update - Aug 21")]),t._v(" "),s("p",[t._v('I finally made this version of VIM to work with a python auto completion engine: jedi-VIM. To make it work, I had to replace the original VIM application with a build with python compiled. And I had to also download the corresponding python dll in a "Windows embeddable package (64-bit)". This is zipped file and doesn\'t require admin rights to install.')]),t._v(" "),s("p",[t._v("Now I can finally have an IDE like experience with just VIM.")])])}),[],!1,null,null,null);a.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{426:function(t,e,a){"use strict";a.r(e);var s=a(1),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("This post documents how I set up the terminal based email client (Neo)mutt")])]),t._v(" "),a("h2",{attrs:{id:"background"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[t._v("#")]),t._v(" Background")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.mutt.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mutt"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://neomutt.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Neomutt"),a("OutboundLink")],1),t._v(" is a terminal based email client. It is a well received terminal application primarily for Linux systems. Although there are many great Email applications with lood-looking graphic designs in various Linux distros (e.g. Thunderbird which is pre-installed in my Manjaro Distro), many people would still prefer an old-school terminal based application for the emails. The reasons people may choose a terminal based applications over a GUI applications are:")]),t._v(" "),a("ul",[a("li",[t._v("Speed: Without loading all graphic components, terminal based application usually has better performance and is more responsive.")]),t._v(" "),a("li",[t._v("Configurability: Many terminal based applications are usually very configurable. And the configurations are just kept jin one or a few dot files, which makes it extremely easy to sync among different machines.")]),t._v(" "),a("li",[t._v("Better workflow integration: When working in a Linux world, one likely spends most of the time in the terminal. Using a terminal based application makes the workflow more fluent and natural. And by making the shortcuts the same logic as the shell application and text editor, one would be very fast in those applications without ever leaving the keyboard.")])]),t._v(" "),a("p",[t._v("When it comes to the emails, Mutt/Neomutt is pretty much the only choice of the terminal based Email application.")]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Just like Vim and Neovim, Neomutt is more modern version of Mutt. To install Neomutt, simply use your system's package manager. For example, for Arch based system, simply do:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pacman "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-S")]),t._v(" neomutt\n")])])]),a("h2",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),a("p",[t._v("I kept my Neomutt configuration in "),a("code",[t._v("~/.config/neomutt/")]),t._v(". The entry point is the muttrc file. Below is the folder structure.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("├── accounts\n│   └── yahoo\n├── colors\n├── mailcap\n├── mappings\n├── muttrc\n└── settings\n")])])]),a("ul",[a("li",[a("strong",[t._v("muttrc")]),t._v(": This is the entry point of all configuration files, similar to init.vim for VIM configuration. It will simply source the rest of the configuration files.")]),t._v(" "),a("li",[a("strong",[t._v("accounts")]),t._v(": You could have multiple email accounts configured in neomutt. The folder hosts account specific configurations such as the corresponding email servers, login credentials, email Folders etc.")]),t._v(" "),a("li",[a("strong",[t._v("mailcap")]),t._v(": This file is used to define the applications to use for various attachments in emails. In modern emails, it is not just the plain texts. More often, an email will contain html, pictures, PDFs, etc. The mailcap file will configure what applications to use for dealing with these non-text files contained / attached in emails.")]),t._v(" "),a("li",[a("strong",[t._v("mappings")]),t._v(": Customized key mappings for neomutt. While neomutt's default key mappings are already great and straightforward, I would prefer to have a few more keystrokes that would operate in a similar way as VIM does.")]),t._v(" "),a("li",[a("strong",[t._v("settings")]),t._v(": General behaviors of neomutt are configured in this file.")]),t._v(" "),a("li",[a("strong",[t._v("colors")]),t._v(": And last but not the least, color schemes can be defined for the mail box, email headers, bodies and more.")])]),t._v(" "),a("h2",{attrs:{id:"main-configuration-muttrc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-configuration-muttrc"}},[t._v("#")]),t._v(" Main Configuration muttrc")]),t._v(" "),a("p",[t._v("A simple entry point muttrc file could look like this:")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("source")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("neomutt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("settings\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("source")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("neomutt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("colors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("source")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("neomutt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mappings\n")])])]),a("h2",{attrs:{id:"connect-to-an-email-account"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connect-to-an-email-account"}},[t._v("#")]),t._v(" Connect to An Email Account")]),t._v(" "),a("p",[t._v("Depending on the email provider, the way you need to specify your account information is a bitter different. The main things need to be set include:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Email servers")]),t._v(": This includes both receiving and sending servers. The common server protocol is IMAP for receiving and SMTP for sending. Below is an example of Yahoo emails server information")])]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" imap_user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myusername@yahoo.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" folder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"imaps://imap.mail.yahoo.com:993"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" spoolfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+INBOX"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" record "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+Sent"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" trash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+Trash"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" postponed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+Draft"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" smtp_url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"smtp://myusername@smtp.mail.yahoo.com:587/"')]),t._v("\nmailboxes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("INBOX "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Sent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Trash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Draft\n\n")])])]),a("p",[t._v("You would also need to supply your email credentials in the setting. Some email provider would require a more secured way to access the mail boxes. For example, Yahoo mail requires to use a randomly generated password for any third party email client. You could specify the password directly in the configuration file. But you could also use the file encryption applications such as "),a("a",{attrs:{href:"https://gnupg.org/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("gpg")]),a("OutboundLink")],1),t._v(" to encrypt the password. The way to set your email password is as follows:")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" smtp_pass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mypassword'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" imap_pass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mypassword'")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"general-behavior-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general-behavior-settings"}},[t._v("#")]),t._v(" General Behavior: settings")]),t._v(" "),a("p",[t._v("For general settings, it is all about personal preference. A few things that you could set as your default includes:")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("unset confirmappend      # No additional "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("prompt")]),t._v(" asking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" confirmation\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("quit")]),t._v("                 # No additional "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("prompt")]),t._v(" asking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" confirmation \nunset mark_old           # Only "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mark")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" beep_new             # Bell "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" mails\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" pipe_decode          # strip headers and eval mimes when piping\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" thorough_search      # strip headers and eval mimes before searching\n")])])]),a("h2",{attrs:{id:"key-mappings-mappings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-mappings-mappings"}},[t._v("#")]),t._v(" Key mappings: mappings")]),t._v(" "),a("p",[t._v("I prefer the key mappings to be similar to what I have for VIM.")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("\n# General rebindings\nbind attach "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mailcap\nbind attach "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("l")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mailcap\nbind editor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" noop\nbind pager "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("c")]),t._v(" imap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mail\nbind index G "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("last")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("entry\nbind index g noop\nbind index gg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("entry\nbind pager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("attach "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("h")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v("\nbind pager "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("line\nbind pager "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("previous")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("line\nbind pager "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("l")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("attachments\nbind index D "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("message\nbind index U undelete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("message\nbind index L limit\nbind index "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("h")]),t._v(" noop\nbind index "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("l")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("message\nbind browser "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("h")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("parent\nbind browser "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("l")]),t._v(" select"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("entry\nbind pager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("browser gg "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("page\nbind pager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("browser G bottom"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("page\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("browser "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("d")]),t._v(" half"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("down\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("browser "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u")]),t._v(" half"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("up")]),t._v("\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager R group"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reply\nbind index \\"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("031")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("previous")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("undeleted\t# Mouse wheel\nbind index \\"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("undeleted\t\t# Mouse wheel\nbind pager \\"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("031")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("previous")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("line\t\t# Mouse wheel\nbind pager \\"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("line\t\t# Mouse wheel\nbind editor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Tab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complete")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("query\n\n\n# sidebar mappings\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager \\Ck sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("prev")]),t._v("\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager \\Cj sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v("\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager \\Co sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v("\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager \\Cp sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("prev")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager \\Cn sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager B sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("toggle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("visible\n\n# global index and pager shortcuts\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager @ compose"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sender\nbind index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager D purge"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("message\nbind index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tab")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sync"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mailbox\nbind index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" collapse"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("thread\n\n# Email completion bindings\nbind editor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Tab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complete")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("query\nbind editor ^T "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complete")]),t._v("\n\n# Press A "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" add contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" Khard address book\nmacro index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager A \\\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<pipe-message>khard add-email<return>"')]),t._v(" \\\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add the sender email address to khard"')]),t._v("\n\n### Shortcuts\nmacro index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pager U "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<enter-command>set pipe_decode = yes<enter><pipe-message>urlview<enter><enter-command>set pipe_decode = no<enter>"')]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"view URLs"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"color-scheme-colors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-scheme-colors"}},[t._v("#")]),t._v(" Color scheme: colors")]),t._v(" "),a("p",[t._v("Color scheme is always the fun part. Below is my color scheme.")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("\n# Header colors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\ncolor header blue default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v("\ncolor header brightmagenta default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(From)"')]),t._v("\ncolor header brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(Subject)"')]),t._v("\ncolor header brightwhite default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(CC|BCC)"')]),t._v("\n\nmono bold bold\nmono underline underline\nmono indicator reverse\nmono error bold\ncolor normal default default\ncolor indicator brightyellow default # currently selected message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" default makes bar clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" disabled arrow "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" save space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("\ncolor sidebar_highlight "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" default\ncolor sidebar_divider brightblack black\ncolor sidebar_flagged "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" black\ncolor sidebar_new green black\ncolor normal brightyellow default\ncolor error "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" default\ncolor tilde black default\ncolor message cyan default\ncolor markers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" white\ncolor attachment white default\ncolor search brightmagenta default\ncolor status brightyellow black\ncolor hdrdefault brightgreen default\ncolor quoted green default\ncolor quoted1 blue default\ncolor quoted2 cyan default\ncolor quoted3 yellow default\ncolor quoted4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" default\ncolor quoted5 brightred default\ncolor signature brightgreen default\ncolor bold black default\ncolor underline black default\ncolor normal default default\n\ncolor body brightred default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[\\-\\.+_a-zA-Z0-9]+@[\\-\\.a-zA-Z0-9]+"')]),t._v(" # Email addresses\ncolor body brightblue default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(https?|ftp)://[\\-\\.,/%~_:?&=\\#a-zA-Z0-9]+"')]),t._v(" # URL\ncolor body green default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\`[^\\`]*\\`"')]),t._v(" # Green text between ` and `\ncolor body brightblue default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^# \\.*"')]),t._v(" # Headings "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" bold blue\ncolor body brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^## \\.*"')]),t._v(" # Subheadings "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" bold cyan\ncolor body brightgreen default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^### \\.*"')]),t._v(" # Subsubheadings "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" bold green\ncolor body yellow default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(\\t| )*(-|\\\\*) \\.*"')]),t._v(" # List items "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" yellow\ncolor body brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[;:][-o][)/(|]"')]),t._v(" # emoticons\ncolor body brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[;:][)(|]"')]),t._v(" # emoticons\ncolor body brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[ ][*][^*]*[*][ ]?"')]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("more")]),t._v(" emoticon"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\ncolor body brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[ ]?[*][^*]*[*][ ]"')]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("more")]),t._v(" emoticon"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\ncolor body "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(BAD signature)"')]),t._v("\ncolor body cyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(Good signature)"')]),t._v("\ncolor body brightblack default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^gpg: Good signature .*"')]),t._v("\ncolor body brightyellow default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^gpg: "')]),t._v("\ncolor body brightyellow "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^gpg: BAD signature from.*"')]),t._v("\nmono body bold "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^gpg: Good signature"')]),t._v("\n#mohttps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("neomutt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("config_vars"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("htmlno body bold "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^gpg: BAD signature from.*"')]),t._v("\ncolor body "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("red")]),t._v(" default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"([a-z][a-z0-9+-]*://(((([a-z0-9_.!~*'();:&=+$,-]|%[0-9a-f][0-9a-f])*@)?((([a-z0-9]([a-z0-9-]*[a-z0-9])?)\\\\.)*([a-z]([a-z0-9-]*[a-z0-9])?)\\\\.?|[0-9]+\\\\.[0-9]+\\\\.[0-9]+\\\\.[0-9]+)(:[0-9]+)?)|([a-z0-9_.!~*'()$,;:@&=+-]|%[0-9a-f][0-9a-f])+)(/([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*(;([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*)*(/([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*(;([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*)*)*)?(\\\\?([a-z0-9_.!~*'();/?:@&=+$,-]|%[0-9a-f][0-9a-f])*)?(#([a-z0-9_.!~*'();/?:@&=+$,-]|%[0-9a-f][0-9a-f])*)?|(www|ftp)\\\\.(([a-z0-9]([a-z0-9-]*[a-z0-9])?)\\\\.)*([a-z]([a-z0-9-]*[a-z0-9])?)\\\\.?(:[0-9]+)?(/([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*(;([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*)*(/([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*(;([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*)*)*)?(\\\\?([-a-z0-9_.!~*'();/?:@&=+$,]|%[0-9a-f][0-9a-f])*)?(#([-a-z0-9_.!~*'();/?:@&=+$,]|%[0-9a-f][0-9a-f])*)?)[^].,:;!)? \\t\\r\\n<>\\\"]\"")]),t._v("\n\n# Default index colors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\ncolor index yellow default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v("\ncolor index_author brightmagenta  default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v("\ncolor index_number blue default\ncolor index_subject cyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v("\n\n# For "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" mail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\ncolor index brightyellow default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~N"')]),t._v("\ncolor index_author brightred default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~N"')]),t._v("\ncolor index_subject brightcyan default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~N"')]),t._v("\n\ncolor progress black cyan\n\n")])])]),a("h2",{attrs:{id:"last-words"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-words"}},[t._v("#")]),t._v(" Last Words")]),t._v(" "),a("p",[t._v("Neomutt can be a bit tedious to configure. Fortunately, there are a lot of people out there willing to share their dot files. For example, my configurations are largely based on Gideon Wolfe's Configuration "),a("a",{attrs:{href:"https://gideonwolfe.com/posts/workflow/neomutt/intro/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Youtuber Luke Smith also made a wizard for neomutt which can be found here: "),a("a",{attrs:{href:"https://github.com/LukeSmithxyz/mutt-wizard",target:"_blank",rel:"noopener noreferrer"}},[t._v("LukeSmithxyz/mutt-wizard"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);